{"version":3,"sources":["../../src/caltopo/Marker.js"],"names":["Marker","config","name","label","comments","updated","parseInt","pos","position","lat","lng","iconFor","url","icon","base","hexDot","match","customCaltopo","custom","caltopo","c","a","t"],"mappings":";;;;;;;;;;IAAqBA,M;AAEnB,kBAAaC,MAAb,EAAqB;AAAA;;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYD,OAAOE,KAAnB;AACA,SAAKC,QAAL,GAAgBH,OAAOG,QAAvB;AACA,SAAKC,OAAL,GAAeC,SAASL,OAAOI,OAAhB,CAAf;AACD;;;;kCAEc;AACb,UAAME,MAAM,KAAKN,MAAL,CAAYO,QAAxB;AACA,aAAO,CAACD,IAAIE,GAAL,EAAUF,IAAIG,GAAd,CAAP;AACD;;;2BAEO;AACN,aAAOV,OAAOW,OAAP,CAAe,KAAKV,MAAL,CAAYW,GAA3B,CAAP;AACD;;;4BAEeC,I,EAAM;AACpB,UAAMC,OAAO,4CAAb;;AAEA;AACA,UAAMC,SAASF,KAAKG,KAAL,CAAW,YAAX,CAAf;AACA,UAAID,MAAJ,EAAY;AACV,eAAUD,IAAV,gBAAyBC,OAAO,CAAP,CAAzB;AACD;;AAED;AACA,UAAMH,MAAMC,KAAKG,KAAL,CAAW,cAAX,CAAZ;AACA,UAAIJ,GAAJ,EAAS;AACP,eAAOC,IAAP;AACD;;AAED;AACA,UAAMI,gBAAgBJ,KAAKG,KAAL,CAAW,uBAAX,CAAtB;AACA,UAAIC,aAAJ,EAAmB;AACjB,eAAOH,OAAOI,OAAOD,cAAc,CAAd,CAAP,EAAyBA,aAAzB,CAAd;AACD;;AAED;AACA,UAAME,UAAUN,KAAKG,KAAL,CAAW,SAAX,CAAhB;AACA,UAAIG,OAAJ,EAAa;AACX,mFAAyEA,QAAQ,CAAR,CAAzE;AACD;AACF;;;;;;kBA5CkBnB,M;;;AAgDrB,IAAMkB,SAAS;AACbE,KAAG;AAAA,iBAASC,EAAE,CAAF,CAAT,SAAiBA,EAAE,CAAF,CAAjB;AAAA,GADU;AAEbC,KAAG;AAAA,sBAAcD,EAAE,CAAF,CAAd,mBAAgCA,EAAE,CAAF,CAAhC;AAAA;AAFU,CAAf","file":"Marker.js","sourcesContent":["export default class Marker {\n\n  constructor (config) {\n    this.config = config;\n    this.name = config.label;\n    this.comments = config.comments;\n    this.updated = parseInt(config.updated);\n  }\n\n  coordinates () {\n    const pos = this.config.position;\n    return [pos.lat, pos.lng];\n  }\n\n  icon () {\n    return Marker.iconFor(this.config.url);\n  }\n\n  static iconFor (icon) {\n    const base = 'https://caltopo.com/resource/imagery/icons';\n\n    // HEX DOT\n    const hexDot = icon.match(/^#(\\w{6})$/);\n    if (hexDot) {\n      return `${base}/circle/${hexDot[1]}.png`;\n    }\n\n    // URL\n    const url = icon.match(/^https?:\\/\\//);\n    if (url) {\n      return icon;\n    }\n\n    // CUSTOMIZED CALTOPO\n    const customCaltopo = icon.match(/^(\\w+):(\\w+),(\\w{6})$/);\n    if (customCaltopo) {\n      return base + custom[customCaltopo[1]](customCaltopo);\n    }\n\n    // CALTOPO\n    const caltopo = icon.match(/^(\\w+)$/);\n    if (caltopo) {\n      return `https://s3-us-west-1.amazonaws.com/caltopo/static/images/icons/${caltopo[1]}.png`;\n    }\n  }\n\n}\n\nconst custom = {\n  c: a => `/${a[2]}/${a[3]}.png`,\n  t: a => `/text/${a[2]}.png?color=${a[3]}`\n};\n"]}